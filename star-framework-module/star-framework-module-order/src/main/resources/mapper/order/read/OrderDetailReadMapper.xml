<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.star.truffle.module.order.dao.read.OrderDetailReadDao">
  <resultMap id="orderDetailResultMap" type="com.star.truffle.module.order.domain.OrderDetail">
    <result column="id" property="id" />
    <result column="order_id" property="orderId" />
    <result column="product_id" property="productId" />
    <result column="title" property="title" />
    <result column="main_picture_url" property="mainPictureUrl" />
    <result column="original_price" property="originalPrice" />
    <result column="price" property="price" />
    <result column="brokerage" property="brokerage" />
    <result column="pickup_time" property="pickupTime" />
    <result column="specification" property="specification" />
    <result column="count" property="count" />
    <result column="product_info" property="productInfo" />
  </resultMap>
	<resultMap id="orderDetailResponseResultMap" type="com.star.truffle.module.order.dto.res.OrderDetailResponseDto">
    <result column="id" property="id" />
    <result column="order_id" property="orderId" />
    <result column="product_id" property="productId" />
    <result column="title" property="title" />
    <result column="main_picture_url" property="mainPictureUrl" />
    <result column="original_price" property="originalPrice" />
    <result column="price" property="price" />
    <result column="brokerage" property="brokerage" />
    <result column="pickup_time" property="pickupTime" />
    <result column="specification" property="specification" />
    <result column="count" property="count" />
    <result column="pickup_code" property="pickupCode" />
    <result column="type" property="type" />
    <result column="province_name" property="provinceName" />
    <result column="city_name" property="cityName" />
    <result column="area_name" property="areaName" />
    <result column="delivery_address" property="deliveryAddress" />
    <result column="delivery_name" property="deliveryName" />
    <result column="delivery_mobile" property="deliveryMobile" />
    <result column="shop_address" property="shopAddress" />
    <result column="shop_name" property="shopName" />
    <result column="shop_mobile" property="shopMobile" />
    <result column="delivery_type" property="deliveryType" />
  </resultMap>
  <sql id="sql_column">
    id, order_id, product_id, title, main_picture_url, original_price, price, brokerage, brokerage_first, pickup_time, specification, count, product_info, price_han, price_wei
  </sql>

  <select id="getOrderDetail" resultType="com.star.truffle.module.order.dto.res.OrderDetailResponseDto">
    select
    <include refid="sql_column" />
    from order_detail
    where id = #{detailId}
  </select>

  <select id="getOrderDetails" resultMap="orderDetailResultMap">
    select
    <include refid="sql_column" />
    from order_detail
    where order_id = #{orderId}
    order by id
  </select>
  
  <select id="getProductNoPayNumber" resultType="java.lang.Long">
    select
    IFNULL(sum(d.count),0)
    from order_detail d 
    where d.product_id = #{productId} and exists (select * from `order` o where o.order_id = d.order_id and o.state = #{state} and o.deleted = 0
    <if test="orderId != null">
      and o.order_id != #{orderId}
    </if>
    )
  </select>
  
  <select id="getBuyTimes" resultType="java.lang.Integer">
    select
    IFNULL(sum(d.count),0)
    from order_detail d 
    where d.product_id = #{productId} and exists (select * from `order` o where o.order_id = d.order_id and o.member_id = #{memberId} and (o.state in (2, 3) or (o.state = 1 and o.deleted = 0))
    <if test="orderId != null">
      and o.order_id != #{orderId}
    </if>
    )
  </select>
  
  <select id="buyRecord" resultMap="orderDetailResponseResultMap">
    SELECT d.count, o.create_time, o.member_id, m.head, CONCAT(left(IFNULL(m.`name`,IFNULL(o.`name`,o.delivery_name)), 1), '***') `name`
    from order_detail d 
    LEFT JOIN `order` o on d.order_id = o.order_id
    LEFT JOIN member_info m on m.member_id = o.member_id
    where 
      o.state in (2,3) and d.product_id = #{productId}
    limit #{pager.startIndex}, #{pager.pageSize}
  </select>
  
  <resultMap id="buyRecordTotalResult" type="HashMap">  
		<result column="members" property="members"/>  
    <result column="counts" property="counts" />
    <result column="money" property="money" />
	</resultMap>

  <select id="buyRecordTotal" resultMap="buyRecordTotalResult">
    SELECT count(DISTINCT o.member_id) members, SUM(d.count) counts, ifnull(sum(d.count * d.price),0) money
    from order_detail d 
    LEFT JOIN `order` o on d.order_id = o.order_id
    where 
      o.state in (2,3) and d.product_id = #{productId}
  </select>

  <select id="queryOrderDetail" resultMap="orderDetailResponseResultMap">
  	set names utf8mb4;
    select 
			id, o.order_id, product_id, title, main_picture_url, original_price, price, brokerage, pickup_time, specification, count, 
		  o.pickup_code, o.type, o.province_name, o.city_name, o.area_name, o.delivery_address, o.delivery_name, o.delivery_mobile,
		  o.shop_address, o.shop_name, o.shop_mobile, o.delivery_type, o.order_code, o.state, o.create_time, o.`name`, o.mobile, o.remark,
      (select `name` from distributor a where a.distributor_id = o.distributor_id) distributor_name,
      (select count(1) from order_aftersale l where l.type = 1 and l.state in (2,4,5,6) and l.detail_id = d.id) saleafter
		from order_detail d, `order` o where d.order_id = o.order_id
		<if test="orderId != null">
      and d.order_id = #{orderId}
    </if>
		<if test="distributorId != null">
      and o.distributor_id = #{distributorId}
    </if>
    <if test="orderCode != null">
      and o.order_code = #{orderCode}
    </if>
    <if test="type != null">
      and o.type = #{type}
    </if>
    <if test="regionId != null">
      and o.region_id = #{regionId}
    </if>
    <if test="shopName != null and shopName != ''">
      and o.shop_name like "%"#{shopName}"%"
    </if>
    <if test="expressNumber != null and expressNumber != ''">
      and o.express_number like "%"#{expressNumber}"%"
    </if>
    <if test="shopMobile != null and shopMobile != ''">
      and o.shop_mobile like "%"#{shopMobile}"%"
    </if>
    <if test="mobile != null and mobile != ''">
      and o.mobile = #{mobile}
    </if>
    <if test="deliveryType != null">
      and o.delivery_type = #{deliveryType}
    </if>
    <if test="pickupCode != null and pickupCode != ''">
      and o.pickup_code = #{pickupCode}
    </if>
		<if test="states != null and states != ''">
      and o.state in (${states})
    </if>
		<if test="transportStates != null and transportStates != ''">
      and o.transport_state in (${transportStates})
    </if>
    <if test="beginCreateTime != null">
      and o.create_time &gt;= #{beginCreateTime}
    </if>
    <if test="endCreateTime != null">
      and o.create_time &lt;= #{endCreateTime}
    </if>
    <if test="productName != null and productName == ''">
      and exists (select 1 from product p where p.product_id = d.product_id and p.title like "%"#{productName}"%")
    </if>
    <if test="productId != null">
      and exists (select 1 from product p where p.product_id = d.product_id and p.product_id = #{productId})
    </if>
    order by o.delivery_type, o.create_time asc
    <if test="pager != null and pager.pageSize!=null and pager.startIndex!=null">
      limit #{pager.startIndex}, #{pager.pageSize}
    </if> 
  </select>
</mapper>