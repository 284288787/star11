<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.star.truffle.module.order.dao.write.KickbackDetailWriteDao">
  <insert id="saveKickbackDetail" useGeneratedKeys="true" keyProperty="id" parameterType="com.star.truffle.module.order.domain.KickbackDetail">
    insert into kickback_detail(id, distributor_id, point_begin_time, point_end_time, total_money, total_money_yun, create_time, state, reject, update_time)
    values(#{id}, #{distributorId}, #{pointBeginTime}, #{pointEndTime}, #{totalMoney}, #{totalMoneyYun}, #{createTime}, #{state}, #{reject}, #{updateTime})
  </insert>

  <insert id="batchSaveKickbackDetail" parameterType="java.util.List">
    insert into kickback_detail(id, distributor_id, point_begin_time, point_end_time, total_money, total_money_yun, create_time, state, reject, update_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id}, #{item.distributorId}, #{item.pointBeginTime}, #{item.pointEndTime}, #{item.totalMoney}, #{item.totalMoneyYun}, #{item.createTime}, #{item.state}, #{item.reject}, #{updateTime})
    </foreach>
  </insert>

  <update id="updateKickbackDetail" parameterType="com.star.truffle.module.order.dto.req.KickbackDetailRequestDto">
    update kickback_detail
    <trim prefix="set" suffixOverrides=",">
      <if test="state != null">state = #{state},</if>
      <if test="updateTime != null">update_time = #{updateTime},</if>
      <if test="reject != null and reject != ''">reject = #{reject},</if>
    </trim>
    where id = #{id}
  </update>

  <delete id="deleteKickbackDetail" parameterType="java.lang.Long">
    delete from kickback_detail where id = #{id}
  </delete>

  <resultMap id="kickbackDetailResponseDtoResultMap" type="com.star.truffle.module.order.dto.res.KickbackDetailResponseDto">
    <result column="id" property="id" />
    <result column="distributor_id" property="distributorId" />
    <result column="point_time" property="pointTime" />
    <result column="total_money" property="totalMoney" />
    <result column="create_time" property="createTime" />
    <result column="state" property="state" />
    <result column="reject" property="reject" />
    <result column="distributor_name" property="distributorName" />
    <result column="distributor_mobile" property="distributorMobile" />
    <result column="province_name" property="provinceName" />
    <result column="city_name" property="cityName" />
    <result column="area_name" property="areaName" />
    <result column="town_name" property="townName" />
    <result column="region_name" property="regionName" />
    <result column="update_time" property="updateTime" />
  </resultMap>

  <sql id="sql_column">
    kickback_detail.id, kickback_detail.distributor_id, point_begin_time, point_end_time, kickback_detail.total_money, 
    kickback_detail.create_time, kickback_detail.update_time, kickback_detail.state, kickback_detail.total_money_yun, 
    kickback_detail.reject, d.`name` distributor_name, d.mobile distributor_mobile, 
    r.`name` region_name, ifnull(p.shortName, p.areaName) province_name, ifnull(c.shortName, c.areaName) city_name,
    ifnull(a.shortName, a.areaName) area_name, ifnull(t.shortName, t.areaName) town_name
  </sql>

  <select id="getKickbackDetail" resultType="com.star.truffle.module.order.dto.res.KickbackDetailResponseDto">
    select
    <include refid="sql_column" />
    from kickback_detail
    LEFT JOIN distributor d on d.distributor_id = kickback_detail.distributor_id
    LEFT JOIN distribution_region r on r.region_id = d.region_id
    LEFT JOIN sys_area p on p.areaId = r.province_id
    LEFT JOIN sys_area c on c.areaId = r.city_id
    LEFT JOIN sys_area a on a.areaId = r.area_id
    LEFT JOIN sys_area t on t.areaId = r.town_id
    where id = #{id}
  </select>

</mapper>