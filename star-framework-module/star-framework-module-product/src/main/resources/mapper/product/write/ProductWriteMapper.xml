<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.star.truffle.module.product.dao.write.ProductWriteDao">
  <insert id="saveProduct" useGeneratedKeys="true" keyProperty="productId" parameterType="com.star.truffle.module.product.domain.Product">
    insert into product(cover_path, idx, cate_names, product_cate_id, product_id, title, subtitle, tag, presell_time, off_shelf_time, pickup_time, state, original_price, price, supplier, brand, specification, origin_place, description, subscribers, create_time, create_user, update_time, update_user, brokerage_type, brokerage_value, brokerage_first, price_han, price_wei, supplier_name, supplier_mobile)
    values(#{coverPath}, #{idx}, #{cateNames}, #{productCateId}, #{productId}, #{title}, #{subtitle}, #{tag}, #{presellTime}, #{offShelfTime}, #{pickupTime}, #{state}, #{originalPrice}, #{price}, #{supplier}, #{brand}, #{specification}, #{originPlace}, #{description}, #{subscribers}, #{createTime}, #{createUser}, #{updateTime}, #{updateUser}, #{brokerageType}, #{brokerageValue}, #{brokerageFirst}, #{priceHan}, #{priceWei}, #{supplierName}, #{supplierMobile})
  </insert>

  <insert id="batchSaveProduct" parameterType="java.util.List">
    insert into product(cover_path, idx, cate_names, product_cate_id, product_id, title, subtitle, tag, presell_time, off_shelf_time, pickup_time, state, original_price, price, supplier, brand, specification, origin_place, description, subscribers, create_time, create_user, update_time, update_user, brokerage_type, brokerage_value, brokerage_first, price_han, price_wei, supplier_name, supplier_mobile)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.coverPath}, #{item.idx}, #{item.cateNames}, #{item.productCateId}, #{item.productId}, #{item.title}, #{item.subtitle}, #{item.tag}, #{item.presellTime}, #{item.offShelfTime}, #{item.pickupTime}, 
      #{item.state}, #{item.originalPrice}, #{item.price}, #{item.supplier}, #{item.brand}, #{item.specification}, #{item.originPlace}, 
      #{item.description}, #{item.subscribers}, #{item.createTime}, #{item.createUser}, #{item.updateTime}, #{item.updateUser}, 
      #{item.brokerageType}, #{item.brokerageValue}, #{item.brokerageFirst}, #{item.priceHan}, #{item.priceWei}, #{item.supplierName}, #{item.supplierMobile})
    </foreach>
  </insert>

  <update id="updateProduct" parameterType="com.star.truffle.module.product.dto.req.ProductRequestDto">
    update product
    <trim prefix="set" suffixOverrides=",">
      <if test="title != null and title != ''">title = #{title},</if>
      <if test="subtitle != null and subtitle != ''">subtitle = #{subtitle},</if>
      <if test="tag != null and tag != ''">tag = #{tag},</if>
      <if test="presellTime != null or presellTimeUpdate == 1">presell_time = #{presellTime},</if>
      <if test="offShelfTime != null or offShelfTimeUpdate == 1">off_shelf_time = #{offShelfTime},</if>
      <if test="pickupTime != null or pickupTimeUpdate == 1">pickup_time = #{pickupTime},</if>
      <if test="state != null">state = #{state},</if>
      <if test="cateNames != null">cate_names = #{cateNames},</if>
      <if test="productCateId != null">product_cate_id = #{productCateId},</if>
      <if test="originalPrice != null">original_price = #{originalPrice},</if>
      <if test="price != null">price = #{price},</if>
      <if test="supplier != null and supplier != ''">supplier = #{supplier},</if>
      <if test="brand != null and brand != ''">brand = #{brand},</if>
      <if test="specification != null and specification != ''">specification = #{specification},</if>
      <if test="originPlace != null and originPlace != ''">origin_place = #{originPlace},</if>
      <if test="description != null and description != ''">description = #{description},</if>
      <if test="subscribers != null">subscribers = #{subscribers},</if>
      <if test="updateTime != null">update_time = #{updateTime},</if>
      <if test="updateUser != null and updateUser != ''">update_user = #{updateUser},</if>
      <if test="brokerageType != null">brokerage_type = #{brokerageType},</if>
      <if test="brokerageValue != null">brokerage_value = #{brokerageValue},</if>
      <if test="brokerageFirst != null">brokerage_first = #{brokerageFirst},</if>
      <if test="priceHan != null">price_han = #{priceHan},</if>
      <if test="priceWei != null">price_wei = #{priceWei},</if>
      <if test="supplierName != null">supplier_name = #{supplierName},</if>
      <if test="supplierMobile != null">supplier_mobile = #{supplierMobile},</if>
      <if test="idx != null">idx = #{idx},</if>
      <if test="coverPath != null and coverPath != ''">cover_path = #{coverPath},</if>
    </trim>
    where product_id = #{productId}
  </update>

  <update id="sortBySoldNumber">
    update product p, (
      select (@i:=@i+1) rownum, t.idx, t.sold_number, t.product_id from (
      select p.idx, i.sold_number, p.product_id from product p
      left join product_inventory i on p.product_id = i.product_id 
      order by i.sold_number desc
      ) t, (select @i:=0) t2) b SET p.idx = b.rownum where b.product_id = p.product_id
  </update>
  <delete id="deleteProduct" parameterType="java.lang.Long">
    delete from product where product_id = #{productId}
  </delete>

  <resultMap id="productResponseDtoResultMap" type="com.star.truffle.module.product.dto.res.ProductResponseDto">
  </resultMap>

  <sql id="sql_column">
   cover_path, product.idx, product.product_id, title, subtitle, tag, presell_time, off_shelf_time, pickup_time, state, original_price, price, supplier, brand, specification, origin_place, description, subscribers, product.create_time, create_user, update_time, update_user, brokerage_type, brokerage_value,
    number_type, number, sold_number, type, times, brokerage_first, price_han, price_wei, supplier_name, supplier_mobile, product.cate_names, product.product_cate_id, a.product_cate_name, 
    (select p.url from product_picture p where p.product_id = product.product_id and p.type = 1 limit 1) mainPictureUrl
  </sql>

  <select id="getProduct" resultType="com.star.truffle.module.product.dto.res.ProductResponseDto">
    select
    <include refid="sql_column" />
    from product
    inner join product_inventory i on product.product_id = i.product_id 
    LEFT JOIN product_category a on product.product_cate_id = a.product_cate_id
    where product.product_id = #{productId}
  </select>

  <select id="getMinIdx" resultType="java.lang.Integer">
    select
    	ifnull(min(idx), 1)
    from product
  </select>

</mapper>